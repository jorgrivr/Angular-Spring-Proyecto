{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class AdminService {\n  obtenerAdmin() {\n    throw new Error('Method not implemented.');\n  }\n  obtenerListaAdmin() {\n    throw new Error('Method not implemented.');\n  }\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n    //Esta URL obtiene el listado de los usuarios en el backend.\n    this.baseURL = \"http://localhost:8080/api/v1/admins\";\n  }\n  obtenerListadeUsuario() {\n    return this.httpClient.get(`${this.baseURL}`);\n  }\n}\nAdminService.ɵfac = function AdminService_Factory(t) {\n  return new (t || AdminService)(i0.ɵɵinject(i1.HttpClient));\n};\nAdminService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AdminService,\n  factory: AdminService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AAQA,OAAM,MAAOA,YAAY;EACvBC,YAAY;IACV,MAAM,IAAIC,KAAK,CAAC,yBAAyB,CAAC;EAC5C;EACAC,iBAAiB;IACf,MAAM,IAAID,KAAK,CAAC,yBAAyB,CAAC;EAC5C;EAKAE,YAAoBC,UAAsB;IAAtB,eAAU,GAAVA,UAAU;IAH9B;IACQ,YAAO,GAAC,qCAAqC;EAEP;EAG9CC,qBAAqB;IACnB,OAAO,IAAI,CAACD,UAAU,CAACE,GAAG,CAAU,GAAG,IAAI,CAACC,OAAO,EAAE,CAAC;EACxD;;AAhBWR,YAAY;mBAAZA,YAAY;AAAA;AAAZA,YAAY;SAAZA,YAAY;EAAAS,SAAZT,YAAY;EAAAU,YAFX;AAAM","names":["AdminService","obtenerAdmin","Error","obtenerListaAdmin","constructor","httpClient","obtenerListadeUsuario","get","baseURL","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\j.rivera\\Desktop\\Angular-Spring\\gestion-empleados-frontend\\src\\app\\admin.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Admin } from './admin';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdminService {\n  obtenerAdmin() {\n    throw new Error('Method not implemented.');\n  }\n  obtenerListaAdmin() {\n    throw new Error('Method not implemented.');\n  }\n\n  //Esta URL obtiene el listado de los usuarios en el backend.\n  private baseURL=\"http://localhost:8080/api/v1/admins\";\n\n  constructor(private httpClient :HttpClient) { }\n\n\n  obtenerListadeUsuario():Observable<Admin[]>{\n    return this.httpClient.get<Admin[]>(`${this.baseURL}`);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}